* 옵저버 패턴(Observer Pattern)
한 객체의 상태가 바뀌면 그 객체에 의존하는 다른 객체에게 연락이 가고
자동으로 내용이 갱신되는 방식으로 일대다(one-to-many) 의존성을 정의.


* 느슨한 결합(Loose Coupling)
객체들이 상호작용할 수는 있지만, 서로를 잘 모르는 관계를 의미.
옵저버 패턴은 느슨한 결합의 대표적인 예.
상호작용하는 객체 사이에는 가능하면 느슨한 결합을 사용해야 한다.


* 객체지향 원칙
- 바뀌는 부분은 캡슐화한다
- 상속보다는 구성을 활용한다
- 구현보다는 인터페이스에 맞춰서 프로그래밍한다
- 상호작용하는 객체 사이에서는 가능하면 느슨한 결합을 사용해야 한다